import{R as P,h as y,N as D,g as x,i as b,S as _,j as w,f as k}from"./entry.9b2a952d.js";const C=()=>null;function O(...s){var m;const u=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(u);let[a,o,e={}]=s;if(typeof a!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof o!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");e.server=e.server??!0,e.default=e.default??C,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0;const t=P(),l=()=>t.isHydrating?t.payload.data[a]:t.static.data[a],d=()=>l()!==void 0;t._asyncData[a]||(t._asyncData[a]={data:y(l()??((m=e.default)==null?void 0:m.call(e))??null),pending:y(!d()),error:y(t.payload._errors[a]?D(t.payload._errors[a]):null)});const r={...t._asyncData[a]};r.refresh=r.execute=(i={})=>{if(t._asyncDataPromises[a]){if(i.dedupe===!1)return t._asyncDataPromises[a];t._asyncDataPromises[a].cancelled=!0}if(i._initial&&d())return l();r.pending.value=!0;const c=new Promise((n,f)=>{try{n(o(t))}catch(g){f(g)}}).then(n=>{if(c.cancelled)return t._asyncDataPromises[a];e.transform&&(n=e.transform(n)),e.pick&&(n=z(n,e.pick)),r.data.value=n,r.error.value=null}).catch(n=>{var f;if(c.cancelled)return t._asyncDataPromises[a];r.error.value=n,r.data.value=k(((f=e.default)==null?void 0:f.call(e))??null)}).finally(()=>{c.cancelled||(r.pending.value=!1,t.payload.data[a]=r.data.value,r.error.value&&(t.payload._errors[a]=D(r.error.value)),delete t._asyncDataPromises[a])});return t._asyncDataPromises[a]=c,t._asyncDataPromises[a]};const p=()=>r.refresh({_initial:!0}),v=e.server!==!1&&t.payload.serverRendered;{const i=x();if(i&&!i._nuxtOnBeforeMountCbs){i._nuxtOnBeforeMountCbs=[];const n=i._nuxtOnBeforeMountCbs;i&&(b(()=>{n.forEach(f=>{f()}),n.splice(0,n.length)}),_(()=>n.splice(0,n.length)))}v&&t.isHydrating&&d()?r.pending.value=!1:i&&(t.payload.serverRendered&&t.isHydrating||e.lazy)&&e.immediate?i._nuxtOnBeforeMountCbs.push(p):e.immediate&&p(),e.watch&&w(e.watch,()=>r.refresh());const c=t.hook("app:data:refresh",n=>{if(!n||n.includes(a))return r.refresh()});i&&_(c)}const h=Promise.resolve(t._asyncDataPromises[a]).then(()=>r);return Object.assign(h,r),h}function M(...s){const u=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(u);const[a,o,e]=s;return O(a,o,{...e,lazy:!0},null)}function z(s,u){const a={};for(const o of u)a[o]=s[o];return a}export{M as a,O as u};
